[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
hook_add = '''
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_fields = 1
let g:go_highlight_types = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1
let g:go_fmt_command = 'goimports'

au FileType go nmap <Leader>r <Plug>(go-run)
au FileType go nmap <Leader>b <Plug>(go-build)
au FileType go nmap <Leader>t <Plug>(go-test)
au FileType go nmap <Leader>c <Plug>(go-coverage)
au FileType go nmap <Leader>d <Plug>(go-def)
au FileType go nmap <Leader>ds <Plug>(go-def-split)
au FileType go nmap <Leader>dv <Plug>(go-def-vertical)
au FileType go nmap <Leader>dt <Plug>(go-def-tab)
au FileType go nmap <Leader>gd <Plug>(go-doc)
au FileType go nmap <Leader>gv <Plug>(go-doc-vertical)
au FileType go nmap <Leader>gb <Plug>(go-doc-browser)
au FileType go nmap <Leader>s <Plug>(go-implements)
au FileType go nmap <Leader>i <Plug>(go-info)
au FileType go nmap <Leader>e <Plug>(go-rename)
'''

[[plugins]]
repo = 'rhysd/vim-clang-format'
on_ft = ['c','cc','cpp','h','hpp','objc','m','mm']
hook_add = '''
let g:clang_format#auto_format = 1
let g:clang_format#style_options = {
\ 'BasedOnStyle': 'Google',
\ 'SortIncludes': 'false',
\ 'AccessModifierOffset' : -2,
\ 'AllowShortIfStatementsOnASingleLine' : 'true',
\ 'AlwaysBreakTemplateDeclarations' : 'true',
\ 'Standard' : 'C++11'}
'''
